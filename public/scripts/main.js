function setupPlayerOption(){function e(){var e=Math.floor(3*Math.random())+1,o=Math.floor(3*Math.random())+1,t=document.querySelector("#r"+e+"c"+o);t.classList.add("x")}var o=function(){for(var o=document.querySelectorAll(".game button"),t=0;t<o.length;t++)o[t].classList.remove("reset");bot=this.classList.contains("x")?"o":"x",player="x"===bot?"o":"x";var r=document.querySelector(".game");r.classList.remove("off"),r.classList.add("on");var s=document.querySelector(".status");s.innerText="Game on","x"===bot?e():s.innerText="Your move"},t=document.querySelectorAll(".player");t[0].onclick=o,t[1].onclick=o}function processPlayerInput(){function e(){result="Game on";var e=document.querySelector(".status");return positions=l(),winner=i(positions),winner?(n(winner),winner[0]==bot?(result="Bot ("+bot+") wins.",e.classList.add("lost")):(result="You ("+player+") win!",e.classList.add("won")),window.setTimeout(o,3e3)):t()&&(result="It's a tie!",e.classList.add("tie"),window.setTimeout(o,3e3)),e.innerText=result,result}function o(){bot="b",player="b";var e=document.querySelector(".game");e.classList.remove("on"),e.classList.add("off");for(var o=document.querySelectorAll(".game button"),t=0;t<o.length;t++)o[t].classList.add("reset"),o[t].classList.remove("x"),o[t].classList.remove("o"),o[t].classList.remove("win");var r=document.querySelector(".status");r.classList.remove("won"),r.classList.remove("tie"),r.classList.remove("lost"),r.innerText="..."}function t(){return positions=l(),winner=i(positions),!winner&&!positions.toString().includes("b")}function s(){positions=l();var e=[bot+bot+"b",bot+"b"+bot,"b"+bot+bot],o=a(positions,e);if(o);else{var t=[player+player+"b",player+"b"+player,"b"+player+player];if(o=a(positions,t));else{var r=[bot+"bb","bb"+bot,"b"+bot+"b"];if(o=a(positions,r));else{var s=[player+"bb","bb"+player,"b"+player+"b"];if(o=a(positions,s));else{var n=[player+"b"+bot,bot+"b"+player,"b"+player+bot,"b"+bot+player,bot+player+"b",player+bot+"b"];o=a(positions,n)}}}}}function n(e){if(e[1]==e[3]||e[2]==e[4])for(var o=e[1];o<=e[3];o++)for(var t=e[2];t<=e[4];t++){var r=document.querySelector("#r"+o+"c"+t);r.classList.add("win")}else if(1==e[1]&&3==e[2])for(var s=1;s<4;s++){var r=document.querySelector("#r"+s+"c"+(4-s));r.classList.add("win")}else if(1==e[1]&&1==e[2])for(var s=1;s<4;s++){var r=document.querySelector("#r"+s+"c"+s);r.classList.add("win")}}function a(e,o){console.log("patterns: "+o);for(var t=!1,s=0;s<3;s++){var n=e[0][s]+e[1][s]+e[2][s];o.includes(e[s])?(c=e[s].indexOf("b")+1,r=s+1,t=[r,c]):o.includes(n)&&(r=n.indexOf("b")+1,c=s+1,t=[r,c])}var a=e[0][0]+e[1][1]+e[2][2],i=e[0][2]+e[1][1]+e[2][0];if(o.includes(a)){var l=a.indexOf("b");r=l+1,c=l+1,t=[r,c]}else if(o.includes(i)){var l=i.indexOf("b");c=3-l,r=l+1,t=[r,c]}if(console.log("after diagonal check result:"+t),t){console.log("findbestslot:trying to fill slot");var u=document.querySelector("#r"+t[0]+"c"+t[1]);u.classList.add(bot)}return t}function i(e){for(var o=!1,t=0;t<3;t++){var r=e[0][t]+e[1][t]+e[2][t];if("xxx"===e[t]?o=["x",t+1,1,t+1,3]:"ooo"===e[t]?o=["o",t+1,1,t+1,3]:"xxx"===r?o=["x",1,t+1,3,t+1]:"ooo"===r&&(o=["o",1,t+1,3,t+1]),o)break}var s=e[0][0]+e[1][1]+e[2][2],n=e[0][2]+e[1][1]+e[2][0];return o||("xxx"===s?o=["x",1,1,3,3]:"xxx"===n?o=["x",1,3,3,1]:"ooo"===s?o=["o",1,1,3,3]:"ooo"===n&&(o=["0",1,3,3,1])),o}function l(){for(var e=[],o=1;o<4;o++){for(var t="",r=1;r<4;r++){var s=document.querySelector("#r"+o+"c"+r);t+=s.classList.contains("x")?"x":s.classList.contains("o")?"o":"b"}e.push(t)}return e}for(var u=function(){var o=l(),t=i(o);t||this.classList.contains("x")||this.classList.contains("o")||this.classList.add(player);var r=e();console.log("game status after user input: "+r),"Game on"==r&&(s(),e())},b=document.querySelectorAll(".game button"),d=0;d<b.length;d++)b[d].onclick=u}var player="b",bot="b";document.addEventListener("DOMContentLoaded",function(e){setupPlayerOption(),processPlayerInput()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
