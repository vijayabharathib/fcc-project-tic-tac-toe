function setupPlayerOption(){function o(){var o=Math.floor(3*Math.random())+1,e=Math.floor(3*Math.random())+1,t=document.querySelector("#r"+o+"c"+e);t.classList.add("x")}var e=function(){for(var e=document.querySelectorAll(".game button"),t=0;t<e.length;t++)e[t].classList.remove("reset");bot=this.classList.contains("x")?"o":"x",player="x"===bot?"o":"x";var r=document.querySelector(".game");r.classList.remove("off"),r.classList.add("on");var n=document.querySelector(".status");n.innerText="Game on","x"===bot&&o()},t=document.querySelectorAll(".player");t[0].onclick=e,t[1].onclick=e}function setupPlayerInput(){function o(){result="Game on",positions=a(),winner=i(positions),winner?(s(winner),result=winner[0]==bot?"Bot ("+bot+") wins.":"You ("+player+") win!",window.setTimeout(e,3e3)):t()&&(result="It's a tie!",window.setTimeout(e,3e3));var o=document.querySelector(".status");return o.innerText=result,result}function e(){bot="b",player="b";var o=document.querySelector(".game");o.classList.remove("on"),o.classList.add("off");for(var e=document.querySelectorAll(".game button"),t=0;t<e.length;t++)e[t].classList.add("reset"),e[t].classList.remove("x"),e[t].classList.remove("o"),e[t].classList.remove("win")}function t(){return positions=a(),winner=i(positions),!winner&&!positions.toString().includes("b")}function n(){positions=a();var o=[bot+bot+"b",bot+"b"+bot,"b"+bot+bot],e=l(positions,o);if(console.log("fill "+e+" to win."),e);else{var t=[player+player+"b",player+"b"+player,"b"+player+player];if(e=l(positions,t),console.log("fill "+e+" to defend"),e);else{var r=[bot+"bb","bb"+bot,"b"+bot+"b"];if(e=l(positions,r),console.log("fill "+e+" to position strategically"),e);else{var n=[player+"bb","bb"+player,"b"+player+"b"];if(e=l(positions,n),console.log("fill "+e+" to position next to player"),e);else{var s=[player+"b"+bot,bot+"b"+player,"b"+player+bot,"b"+bot+player,bot+player+"b",player+bot+"b"];e=l(positions,s),console.log("fill "+e+" to cover last position")}}}}}function s(o){if(o[1]==o[3]||o[2]==o[4])for(var e=o[1];e<=o[3];e++)for(var t=o[2];t<=o[4];t++){var r=document.querySelector("#r"+e+"c"+t);r.classList.add("win")}else if(1==o[1]&&3==o[2])for(var n=1;n<4;n++){var r=document.querySelector("#r"+n+"c"+(4-n));r.classList.add("win")}else if(1==o[1]&&1==o[2])for(var n=1;n<4;n++){var r=document.querySelector("#r"+n+"c"+n);r.classList.add("win")}}function l(o,e){console.log("patterns: "+e);for(var t=!1,n=0;n<3;n++){var s=o[0][n]+o[1][n]+o[2][n];e.includes(o[n])?(c=o[n].indexOf("b")+1,r=n+1,t=[r,c]):e.includes(s)&&(r=s.indexOf("b")+1,c=n+1,t=[r,c])}var l=o[0][0]+o[1][1]+o[2][2],i=o[0][2]+o[1][1]+o[2][0];if(e.includes(l)){var a=l.indexOf("b");r=a+1,c=a+1,t=[r,c]}else if(e.includes(i)){var a=i.indexOf("b");c=3-a,r=a+1,t=[r,c]}if(console.log("after diagonal check result:"+t),t){console.log("findbestslot:trying to fill slot");var u=document.querySelector("#r"+t[0]+"c"+t[1]);u.classList.add(bot)}return t}function i(o){for(var e=!1,t=0;t<3;t++){var r=o[0][t]+o[1][t]+o[2][t];if("xxx"===o[t]?e=["x",t+1,1,t+1,3]:"ooo"===o[t]?e=["o",t+1,1,t+1,3]:"xxx"===r?e=["x",1,t+1,3,t+1]:"ooo"===r&&(e=["o",1,t+1,3,t+1]),e)break}var n=o[0][0]+o[1][1]+o[2][2],s=o[0][2]+o[1][1]+o[2][0];return e||("xxx"===n?e=["x",1,1,3,3]:"xxx"===s?e=["x",1,3,3,1]:"ooo"===n?e=["o",1,1,3,3]:"ooo"===s&&(e=["0",1,3,3,1])),e}function a(){for(var o=[],e=1;e<4;e++){for(var t="",r=1;r<4;r++){var n=document.querySelector("#r"+e+"c"+r);t+=n.classList.contains("x")?"x":n.classList.contains("o")?"o":"b"}o.push(t)}return o}for(var u=document.querySelectorAll(".game button"),b=function(){var e=a(),t=i(e);t||this.classList.contains("x")||this.classList.contains("o")||this.classList.add(player);var r=o();console.log("game status after user input: "+r),"Game on"==r&&(n(),o())},f=0;f<u.length;f++)u[f].onclick=b}var player="b",bot="b";document.addEventListener("DOMContentLoaded",function(o){setupPlayerOption(),setupPlayerInput()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
