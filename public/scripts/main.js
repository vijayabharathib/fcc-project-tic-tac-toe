function setupPlayerOption(){function e(){var e=Math.floor(3*Math.random())+1,o=Math.floor(3*Math.random())+1,t=document.querySelector("#r"+e+"c"+o);t.classList.add("x")}var o=function(){for(var o=document.querySelectorAll(".game button"),t=0;t<o.length;t++)o[t].classList.remove("reset");bot=this.classList.contains("x")?"o":"x",player="x"===bot?"o":"x";var r=document.querySelector(".game");r.classList.remove("off"),r.classList.add("on");var s=document.querySelector(".status");s.innerText="Game on","x"===bot?e():s.innerText="Your move"},t=document.querySelectorAll(".player");t[0].onclick=o,t[1].onclick=o}function processPlayerInput(){function e(){result="Game on";var e=document.querySelector(".status");return positions=l(),winner=i(positions),winner?(n(winner),winner[0]===bot?(result="Bot ("+bot.toUpperCase()+") wins.",e.classList.add("lost")):(result="You ("+player.toUpperCase()+") win!",e.classList.add("won")),u(),window.setTimeout(o,3e3)):t()&&(result="It's a tie!",e.classList.add("tie"),u(),window.setTimeout(o,3e3)),e.innerText=result,result}function o(){bot="b",player="b";var e=document.querySelector(".game");e.classList.remove("on"),e.classList.add("off");for(var o=document.querySelectorAll(".game button"),t=0;t<o.length;t++)o[t].classList.add("reset"),o[t].classList.remove("x"),o[t].classList.remove("o"),o[t].classList.remove("won"),o[t].classList.remove("lost");var r=document.querySelector(".status");r.classList.remove("won"),r.classList.remove("tie"),r.classList.remove("lost"),r.innerText="..."}function t(){return positions=l(),winner=i(positions),!winner&&!positions.toString().includes("b")}function s(){positions=l();var e=[bot+bot+"b",bot+"b"+bot,"b"+bot+bot],o=a(positions,e);if(!o){var t=[player+player+"b",player+"b"+player,"b"+player+player];o=a(positions,t)}if(!o){var r=[bot+"bb","bb"+bot,"b"+bot+"b"];o=a(positions,r)}if(!o){var s=[player+"bb","bb"+player,"b"+player+"b"];o=a(positions,s)}if(!o){var n=[player+"b"+bot,bot+"b"+player,"b"+player+bot,"b"+bot+player,bot+player+"b",player+bot+"b"];o=a(positions,n)}}function n(e){var o=e[0]===bot?"lost":"won";if(e[1]==e[3]||e[2]==e[4])for(var t=e[1];t<=e[3];t++)for(var r=e[2];r<=e[4];r++){var s=document.querySelector("#r"+t+"c"+r);s.classList.add(o)}else if(1==e[1]&&3==e[2])for(var n=1;n<4;n++){var s=document.querySelector("#r"+n+"c"+(4-n));s.classList.add(o)}else if(1==e[1]&&1==e[2])for(var n=1;n<4;n++){var s=document.querySelector("#r"+n+"c"+n);s.classList.add(o)}}function a(e,o){for(var t=!1,s=0;s<3;s++){var n=e[0][s]+e[1][s]+e[2][s];o.includes(e[s])?(c=e[s].indexOf("b")+1,r=s+1,t=[r,c]):o.includes(n)&&(r=n.indexOf("b")+1,c=s+1,t=[r,c])}var a=e[0][0]+e[1][1]+e[2][2],i=e[0][2]+e[1][1]+e[2][0];if(o.includes(a)){var l=a.indexOf("b");r=l+1,c=l+1,t=[r,c]}else if(o.includes(i)){var l=i.indexOf("b");c=3-l,r=l+1,t=[r,c]}if(t){var u=document.querySelector("#r"+t[0]+"c"+t[1]);u.classList.add(bot)}return t}function i(e){for(var o=!1,t=0;t<3;t++){var r=e[0][t]+e[1][t]+e[2][t];if("xxx"===e[t]?o=["x",t+1,1,t+1,3]:"ooo"===e[t]?o=["o",t+1,1,t+1,3]:"xxx"===r?o=["x",1,t+1,3,t+1]:"ooo"===r&&(o=["o",1,t+1,3,t+1]),o)break}var s=e[0][0]+e[1][1]+e[2][2],n=e[0][2]+e[1][1]+e[2][0];return o||("xxx"===s?o=["x",1,1,3,3]:"xxx"===n?o=["x",1,3,3,1]:"ooo"===s?o=["o",1,1,3,3]:"ooo"===n&&(o=["o",1,3,3,1])),o}function l(){for(var e=[],o=1;o<4;o++){for(var t="",r=1;r<4;r++){var s=document.querySelector("#r"+o+"c"+r);t+=s.classList.contains("x")?"x":s.classList.contains("o")?"o":"b"}e.push(t)}return e}function u(){var e=new Audio("public/audio/chime.ogg");e.play()}for(var d=function(){var o=l(),t=i(o);if(!t&&!this.classList.contains("x")&&!this.classList.contains("o")){this.classList.add(player);var r=e();"Game on"==r&&(s(),e())}},b=document.querySelectorAll(".game button"),p=0;p<b.length;p++)b[p].onclick=d}function setupKeyHandlers(){document.onkeypress=function(e){var o=parseInt(e.key),t=document.querySelector(".game"),r=!t.classList.contains("off");if("X"!=e.key.toUpperCase()||r)if("O"!=e.key.toUpperCase()||r){if(r&&o>0&&o<10){var s="#r"+Math.ceil(o/3);s+="c"+(o%3==0?3:o%3),document.querySelector(s).click()}}else document.querySelector(".player.o").click();else document.querySelector(".player.x").click()}}var player="b",bot="b";document.addEventListener("DOMContentLoaded",function(e){setupPlayerOption(),processPlayerInput(),setupKeyHandlers()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
